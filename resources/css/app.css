@import "tailwindcss";

/* TODO: are these really needed? */
@source "./vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php";
@source "./storage/framework/views/*.php";
@source "../views";
@source "../js";

@plugin "@tailwindcss/typography";

@theme {
    --font-sans: "Inter Variable", "sans-serif";

    --spacing-breakout: 92ch;
    --spacing-breakout-lg: 104ch;
    --spacing-reading: 67ch;
    --spacing-section: calc(var(--spacing) * 20);

    --color-background: hsl(0, 0%, 98%);
    --color-foreground: hsl(240, 10%, 3.9%);

    --color-popover: hsl(0, 0%, 100%);
    --color-popover-foreground: var(--color-foreground);

    --color-card: var(--color-background);
    --color-card-foreground: var(--color-foreground);

    --color-primary: hsl(240, 5.9%, 10%);
    --color-primary-foreground: hsl(0, 0%, 96%);

    --color-secondary: hsl(240, 4.8%, 90%);
    --color-secondary-foreground: var(--color-primary);

    --color-accent: var(--color-secondary);
    --color-accent-foreground: var(--color-primary);

    --color-muted: var(--color-secondary);
    --color-muted-foreground: hsl(240, 3.8%, 46.1%);

    --color-destructive: hsl(0, 84.2%, 60.2%);
    --color-destructive-foreground: hsl(0, 0%, 96%);

    --color-success: hsl(152, 69%, 31%);
    --color-success-foreground: hsl(0, 0%, 98%);

    --color-ring: var(--color-primary);
    --color-border: hsl(240, 5.9%, 90%);
    --color-input: hsl(240, 5.9%, 90%);

    --radius: 0.5rem;
    --radius-lg: var(--radius);
    --radius-md: calc(var(--radius) - 2px);
    --radius-sm: calc(var(--radius) - 4px);
}

@layer base {
    * {
        @apply border-border;
    }
    html {
        /* so the last line of editor is not directly at the bottom of the screen if text is longer than one page */
        scroll-padding-bottom: 2rem;
    }
    body {
        @apply font-sans antialiased bg-background text-foreground;
    }
    #app {
        isolation: isolate;
    }
    ::selection {
		background-color: rgb(145, 205, 245);
		/* color: in; */
	}
}

@utility prose {
    @apply 
        max-w-none 
        prose-neutral
        prose-headings:text-balance 
        prose-headings:text-[1.08rem] 
        prose-headings:font-semibold 
        prose-headings:leading-[inherit]
        prose-headings:tracking-[-0.04em]
        prose-p:text-pretty;
}

@utility heading {
    @apply font-semibold text-balance text-[1.08rem] leading-[inherit] tracking-[-0.04em];
}

@utility link {
    @apply font-semibold underline underline-offset-2;
}

@utility content-grid {
    --content-grid-padding: 2rem;
    --breakout-size: calc(
        (var(--spacing-breakout) - var(--spacing-reading)) / 2
    );
    --breakout-lg-size: calc(
        (var(--spacing-breakout-lg) - var(--spacing-reading)) / 2
    );
    display: grid;
    grid-template-columns:
        [full-width-start] minmax(var(--content-grid-padding), 1fr)
        [breakout-lg-start] minmax(0, var(--breakout-lg-size))
        [breakout-start] minmax(0, var(--breakout-size))
        [content-start]
        min(100% - (var(--content-grid-padding) * 2), var(--spacing-reading))
        [content-end]
        minmax(0, var(--breakout-size)) [breakout-end]
        minmax(0, var(--breakout-lg-size)) [breakout-lg-end]
        minmax(var(--content-grid-padding), 1fr) [full-width-end];
}

@layer components {
    .button {
        @apply 
            gap-2 
            rounded-md 
            text-sm 
            font-normal 
            border
            ring-offset-background
            transition-all 
            focus-visible:outline-none 
            focus-visible:ring-2 
            focus-visible:ring-ring 
            focus-visible:ring-offset-2;
        cursor: default;
        isolation: isolate;
        position: relative;
        /* overflow: hidden; */
        display: inline-flex;
        align-items: center;
        justify-content: center;
        white-space: nowrap;
        --button-bg: var(--_base);
        --highlight-offset: 1px;
        --mix-color: white;
        border-color: color-mix(in hsl, var(--button-bg), var(--mix-color) 20%);
        background-color: var(--button-bg);
        &:hover {
            --button-bg: color-mix(in hsl, var(--_base), var(--mix-color) 5%);
        }
        &:active {
            --button-bg: color-mix(in hsl, var(--_base), var(--mix-color) 10%);
            --highlight-offset: 0px;
        }
        &::after {
            @apply transition-all;
            content: "";
            position: absolute;
            inset: 0;
            border-radius: calc(var(--radius-md) - 1px);
            z-index: -1;
            box-shadow: inset 0 var(--highlight-offset) 0 0 color-mix(in hsl, var(--button-bg), var(--mix-color) 35%);
            background: linear-gradient(
                to top,
                var(--button-bg) 0%,
                color-mix(in hsl, var(--button-bg), var(--mix-color) 20%) 100%
            );
        }
        &:disabled {
            opacity: 50;
            pointer-events: none;
        }
        svg {
            @apply 
                pointer-events-none 
                size-4 
                shrink-0;
        }
        &.button-default {
            @apply  
                text-primary-foreground;
            --_base: var(--color-primary);
        }
        &.button-secondary {
            @apply 
                text-secondary-foreground
                border-secondary;
            --_base: var(--color-secondary);
            &::after {
                background: white;
                box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.1);
            }
        }
        &.button-destructive {
            @apply 
                text-destructive-foreground;
            --_base: var(--color-destructive);
            --button-bg: var(--_base);
        }
        &.button-ghost {
            @apply 
                text-foreground;
            --_base: var(--color-secondary);
            &:not(:hover) {
                --button-bg: transparent;
            }
        }
    }
    .content-grid {
        & > * {
            grid-column: content;
        }
        & > img,
        & > video,
        & > canvas,
        & > iframe,
        & > figure,
        & > .breakout {
            grid-column: breakout;
        }
        & > .breakout-lg {
            grid-column: breakout-lg;
        }
        & > .full-width {
            grid-column: full-width;
        }
        & > .full-width-content {
            grid-column: full-width;
            display: grid;
            grid-template-columns: inherit;
        }
        & > .full-width-fluid {
            grid-column: full-width;
            padding-inline: var(--content-grid-padding);
        }
    }
}

@import "./book";
@import "./tiptap";
